#!/usr/bin/env bash
# type: sbatch -J name script.sh pfile "subs"
# subs should either be a matlab vector "[1:4 5:6]""
# Keep lines starting with #SBATCH together and at top of script! Modify settings as appropriate.

#SBATCH -J dartel				# Job name
#SBATCH --workdir=./			# Set working directory
#SBATCH -o ../../output/dartel-%j
#SBATCH -t 48:00:00				# Set runtime in hh:mm:ss, d-hh, d-hh:mm, mm:ss, or m
#SBATCH --mem 5120				# Set amount of memory in MB (1GB = 1024 MB)

source ../globals.par
label='[DARTEL]'
logfile=LOG.txt

# first arg is pfile
pfile=$1
# rest of args are subs (each arg separated by a space)
shift 
SUBS=( "$@" )

# check if subjects in matlab array or bash array
if [[ ${1:0:1} == '[' ]]; then 
	# matlab array
	subs=''
	for s in "${SUBS[@]}"; do
		subs="$subs $s"
	done
else
	# bash array
	if [[ "$(declare -p SUBS)" =~ "declare -a" ]]; then 
		subs='['
		for s in "${SUBS[@]}"; do
			subs="${subs}${s:1:4} "
		done
		subs="${subs}]"
	fi
fi

echo "${label} $(date) Beginning DARTEL analysis of subject(s) ${subs} with pfile ${pfile}" >> "${logfile}"

# run matlab from the command line as part of a submit job
module load matlab/R2015b
# run script
matlab -nosplash -nodisplay -nodesktop -r "try; DARTEL_spm8_vars($subs,'$pfile'); catch me; fprintf('%s / %s\n',me.identifier,me.message); end; exit"


# # REQUIRES $SUBS TO BE AN ARRAY OF subIDs (form s000)
# # move files to DARTEL_prep
# for t in "${TASKS[@]}"; do 
# 	pushd $PREP_DIR/$t/wd > /dev/null   # move into the working directory, quietly
# 	#(ls -d ./*/ | xargs -n 1 basename)
# 	for d in "${SUBS[@]}"; do
# 		s=../DARTEL/$d/
# 		if ! [[ -d $s ]]; then mkdir $s; fi
# 		if [[ -e "$d/mean*" ]]; then mv $d/mean* $s; fi
# 		if [[ -e "$d/r*" ]]; then mv $d/r* $s; fi
# 		if [[ -e "$d/u*" ]]; then mv $d/u* $s; fi
# 		if [[ -e "$d/w*" ]]; then mv $d/w* $s; fi
# 		if [[ -e "$d/y*" ]]; then mv $d/y* $s; fi
# 		if [[ -e "$d/s*" ]]; then mv $d/s* $s; fi
# 		if [[ -e "$d/*_seg8.mat" ]]; then mv $d/*_seg8.mat $s; fi
# 		if [[ -e "$d/Template*" ]]; then mv $d/Template* ../DARTEL/Templates/; fi
# 	done
#done
popd > /dev/null   # return to the directory this script was run from, quietly
echo "${label} Done. $(date)" >> "${logfile}"
