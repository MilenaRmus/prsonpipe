#!/bin/bash -e
# author: Miriam Weaverdyck 8/1/16
# ------------------------------------------------------------------------------
# this script writes out the parameters to the p_study.m file 
# (a matlab file to be read by SPM12w)

set -e # stop immediately when an error occurs
source pars.par
source ../arch/globals.par

SAVE_DIR=$PROJECT_DIR/$SCRIPT_DIR_SPMw
SAVE_FILE=p_glm_mvpa
echo $SAVE_DIR/$SAVE_FILE.m

spm12_dir=$PKG_DIR/spm12
spm12w_dir=$PKG_DIR/spm12w
#NIfTI_dir=$PKG_DIR/NIfTI

# DEPENDS!!!!!!!!!!!!!!!!!!!
SUB_DIR=prep/wd

if [ $NORM == 'DARTEL' ]; then PREP_NAME='DARTEL'; else PREP_NAME='wd'; fi
if [ $SMOOTH_SOFT != 'none' ]; then USE_SMOOTH=1; else USE_SMOOTH=0; fi

cat <<EOT > $SAVE_DIR/$SAVE_FILE.m
% spm12w r6225
% Parameters file for 1st level glm analysis and 2nd level rfx analysis
% Last updated: April, 2015
% =======1=========2=========3=========4=========5=========6=========7=========8

% User name
global realigns;
glm.username = '$USERNAME';

% Paths and names
%global owd;
glm.study_dir = '$PROJECT_DIR';
glm.prep_name = '$PREP_NAME';
glm.glm_name = '$SAVE_FILE';
glm.ons_dir  = 'MVPA';

% GLM Onsets File Specifications
glm.runsplit    = $RUNSPLIT;   	% Seperate GLM per run?
glm.design_only = 0;   			% Design only (i.e., no data)
glm.outliers    = $OUTLIERS;   	% Include outlier as nuissance in GLM  
glm.duration    = $DURATION;   	% Event/Block Duration (same units as glm.time). 
                       			% Dur files will override.
glm.move = 1;

% bold stats
glm.tr = $TR;		   				% TR length (seconds)
glm.nses = $RUNS;		   			% number of runs
glm.nvols = ones(1,glm.nses)*$NTR;	% total number of TRs in study (num of runs * (nTR = number of TRs per run))
glm.hrf = 'hrf (with time and dispersion derivatives)';
glm.ra = realigns;					% motion correction parameters

% GLM Conditions (seperate by commas)
glm.events     = {$EVENTS}
glm.blocks     = {};
glm.regressors = {};

% GLM Parametric modualtors - Special keyword: 'allthethings'
glm.parametrics = {}; 

% GLM Model Inclusions - 1=yes 0=no
glm.include_run = 1:glm.nses; 			% Specify run to model: 'all' or runs (e.g. [1,3])
glm.use_smooth  = $USE_SMOOTH;     		% Run GLM on: 1 = smoothed, 2 = unsmoothed
glm.cleanupzip = 0;

% GLM Contrasts - Numeric contrasts should sum to zero unless vs. baseline
%               - String contrasts must match Condition names.
%               - String contrast direction determine by the placement of 'vs.'
%               - Special keywords: 'housewine' | 'fir_bins' | 'fir_hrf'
% Note that the housewine's allVSbaseline will skip pmods but is not savy
% to complex designs (i.e., where you want all conditions VS baseline but
% not your user supplied regressors under glm.regressors, so in those cases
% you should create your own allVSbaseline and refuse the housewine). 

glm.con.housewine = 'housewine';
glm.rfx_name = 'rfx_mvpa';
glm.rfx_conds = {'allVSbaseline'};
EOT