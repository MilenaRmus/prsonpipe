#!/bin/bash -e
# author: Miriam Weaverdyck 8/1/16
# bash write_pfile_prep $ext
#
# 9/19/2016 Judith Mildner, edit: modify this file to make parameters for FSL
# this script writes out the parameters to p_FSL.par 
#
# INPUT VARIABLE:
# $ext: str = extension to filename (should reflect which step the temp pfile is for)
#################################################################################
# NOTE: must input 0, 1, or 2 arguments, based on number of tasks.
# Arguments:
#  IF ONLY ONE TASK LISTED IN STUDY_INFO:
#    no args 	: creates a general pfile and reads from pars.par
#    'uw' 		: creates a temp pfile with extension '_uw' and reads from step.par
#  IF ONE OR MORE TASKS LISTED IN STUDY_INFO:
#    'TSK'    	: creates a general pfile for task TSK and reads from that task's pars.par file
#    'TSK' 'uw' : creates a temp pfile with extension '_TSKuw' and reads from step.par


label='[PFILE_FSL]'

pushd `dirname $0` > /dev/null   # move into this directory, quietly

source ../scripts/globals.par

# set file name and folder based on whether or not this is a temp pfile
if [[ $# -eq 0 ]] && [[ $NUM_TASKS -eq  1 ]]; then
# no inputs, only 1 task
	t=$TASKS
	if [[ $PREP_SEP -eq 0 ]]; then source pars.par; else source pars_${t}.par; fi
	fname=''; wd_raw=${RAW_DIR}/${t}/; 
elif [[ $# -eq 1 ]]; then 
	# 1 input
	if [[ $NUM_TASKS -eq 1 ]]; then
		# only 1 task, so input must be extension
		t=$TASKS
		source step.par
		fname="_temp_${t}${1}"; wd_raw=${PREP_DIR}/${t}/${wd_dir}/; 
	else
		t=$1
		if [[ $PREP_SEP -eq 0 ]]; then source pars.par; else source pars_${t}.par; fi
		# more than 1 task, so input must be task name
		fname="_${t}"; wd_raw=${RAW_DIR}/${t}/; 
	fi
elif [[ $# -eq 2 ]]; then
	# 2 inputs, task name and extension name
	t=$1
	source step.par
	fname="_temp_${t}${2}"; wd_raw=${PREP_DIR}/${t}/${wd_dir}/; 
else echo "${label} You must input 0-2 arguments: ";
	echo "${label} 0 (if only one TASK exists!) to create a general pfile.";
	echo "${label} 1 (if only one TASK exists!) to create a temporary pfile with the inputted extension.";
        echo "${label} 1  (if more than one TASK exists!) to create a general pfile for inputted TASK.";
	echo "${label} 2 to create a temporary pfile for TASK (first input) and with an extension (second input).";
	echo "${label} Aborting..."; exit; 
fi

popd > /dev/null   # return to the previous directory, quietly

save_dir=${PROJECT_DIR}/${SCRIPT_DIR_FSL}
fname_full=${save_dir}/p_${FSL}${fname}.m

if [[ $QA == ${FSL} ]]; then qa=1; else qa=0; fi

if [[ $SLICE_TIME == ${FSL} ]]; then slice_time=1; else slice_time=0; fi

if [[ $REALIGN == ${FSL} ]]; then realign=1; else realign=0; fi

if [[ $UNWARP == ${FSL} ]]; then unwarp=1; else unwarp=0; fi

if [[ $SMOOTH_SOFT == ${FSL} ]]; then smooth=$SMOOTH; else smooth=0; fi


cat <<EOT > $fname_full

PREP="${PREP_DIR}/${t}/${wd_dir}"
TASK=$1
SLICETIME=$slice_time
MOTION=$realign
UNWARP=$unwarp
FWHM=$smooth
EPI_ACCEL=$EPI_ACCEL
EPI_ECHOSPACING=$EPI_ECHOSPACING

EOT

echo "${label} Done. Finished writing ${fname_full}"

# unset temporary variables so they can be reused
unset wd_raw
unset fname
